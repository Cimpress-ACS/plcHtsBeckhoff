<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.0.23">
  <POU Name="MiddlePRG_1" Id="{d0b780f9-d9b7-47f3-8805-851f8ce5d376}">
    <Declaration><![CDATA[PROGRAM MiddlePRG_1
VAR
	bolPlcStartupDone: BOOL := FALSE;
	bolHostInitDone: BOOL := FALSE;
	bolInitDone: BOOL := FALSE;
	/// MiddleTask is Task Nr. 2
	uinTaskNbr: UINT := 2;
	pCtrl_CIf: POINTER TO T_Ctrl_CIf;
	pTmpSIf_DRV: POINTER TO T_Ctrl_SIf_DRV;
	pTmpSIf_SLB: POINTER TO T_Ctrl_SIf_SLB;
	pTmpSIf_STB: POINTER TO T_Ctrl_SIf_STB;
	pTmpSIf_MER: POINTER TO T_Ctrl_SIf_MER;
	pTmpSIf_MTR: POINTER TO T_Ctrl_SIf_MTR;
	pTmpSIf_RFW: POINTER TO T_Ctrl_SIf_RFW;
	jj: INT;
	fbTLC_2: FB_DRV;
	fbTLP_3: FB_DRV;
	fbTLP_16: FB_DRV;
	fbTLP_4: FB_DRV;
	fbTLP_5: FB_DRV;
	fbTLK_15: FB_DRV;
	fbMTR_15: FB_MTR;
	/// DPJ in MiddlePRG
	fbDPJ_4: FB_DPJ;
	fbDPJ_15: FB_DPJ;
	fbRFW_4: FB_RFW;
	fbRFW_15: FB_RFW;
	fbSLB_2a: FB_SLB;
	fbDSB1_2a: FB_STB;
	fbDSB2_2a: FB_STB;
	fbSEP_2a: FB_STB;
	fbSLB_2b: FB_SLB;
	fbDSB1_2b: FB_STB;
	fbDSB2_2b: FB_STB;
	fbSEP_2b: FB_STB;
	fbSLB_2c: FB_SLB;
	fbDSB1_2c: FB_STB;
	fbDSB2_2c: FB_STB;
	fbSEP_2c: FB_STB;
	fbBUF_5: FB_SLB;
	fbSBI_5: FB_STB;
	fbDBO_5: FB_STB;
	fbBUF_3: FB_SLB;
	fbSBI_3: FB_STB;
	fbBUF_16: FB_SLB;
	fbSBI_16: FB_STB;
	fbSEP_12: FB_STB;
	fbSEP_13: FB_STB;
	fbSEP_14: FB_STB;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*__________________________________________________________________________________________________
¦	
¦	Vistaprint Schweiz GmbH
¦	CH - 8401 Winterthur
¦
¦	www.vistaprint.ch - info@vistaprint.ch
¦___________________________________________________________________________________________________

Function desription:
call of all controller (FUB) for the middle task class.


History:
Version		Date			Author		Comment
---------------------------------------------------------------------------------------------------
0.00.1		16.09.2013		AVME/PRE	Start history
0.00.2		19.09.2013		AVME/PRE	Implement new Base Concept
0.00.3		23.09.2013		AVME/DSC	Definition of "par" and "cfg"
0.00.4		26.09.2013		AVME/DSC	Delete controller SBO_3 and SBO_10. Stopper physically not used.
0.00.5		08.10.2013		VP/RE		Optimizations FAT Bürglistrasse version
0.00.6		30.10.2013		AVME/DSC	Moved MER_8 to MiddlePRG. Test at the tool.
0.00.7		18.11.2013		AVME/MRU	Add decrementsensor 3.0-B3 at SBI_3 for test
0.00.8		12.12.2013		AVME/MRU	Changed 3.0-B3 to 3.0-B5
										Decrement counter added
0.00.9		16.12.2013		AVME/MRU	Configuration chnage in SBI10/3/5
0.00.10		24.01.2014		AVME/MRU	Moved DPJ from SlowPRG
0.00.11		24.02.2014		AVME/DSC	fbTLP_4 to speed 1.

___________________________________________________________________________________________________*)

// -----------------------------------------------------------------------------------------------
// Initialize the PLC Parameter and check the PLC health
// -----------------------------------------------------------------------------------------------
IF ((NOT bolPlcStartupDone) AND (g_uinStartProzess>=(uinTaskNbr-1))) THEN
	bolPlcStartupDone := TRUE;	
	
	// init	
	// ----------------------------------------------------------------------------------------------------------------------
	//  Incomming Loop
	// ----------------------------------------------------------------------------------------------------------------------

	// Decision Point 4; To Heat Press
	fbDPJ_4.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.DPJ_4);     	// init and entry fb_instance in global fb pointer array
	// RFID Reader, element Controller in this Task, Drive in fastest Task class
	fbRFW_4.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.RFW_4); // init and entry fb_instance in global fb pointer array
	fbRFW_4.pRFD_SIf := g_a_pFunRFD[1]^.getSIf();
	pTmpSIf_RFW := fbRFW_4.getCtrlSIf();
	pTmpSIf_RFW^.Cfg.eTyp := E_Typ_RFW.RF382R;
	pTmpSIf_RFW^.Cfg.stNetId := '192.168.2.123.1.1'; //PLC NetId
	pTmpSIf_RFW^.Cfg.uinSlaveAddr := 1024; //Io card Ethercat adress 

	// ADD Childs
	// RFW
	fbDPJ_4.p_fbRFW := g_a_pCtrlInst[E_CtrlId.RFW_4];
	// Junctions are in the Fast task; Pointer from Global Array
	fbDPJ_4.AddJunction(g_a_pCtrlInst[E_CtrlId.JUN_4a]);
	fbDPJ_4.AddJunction(g_a_pCtrlInst[E_CtrlId.JUN_4b]);
	fbDPJ_4.AddJunction(g_a_pCtrlInst[E_CtrlId.JUN_5a]);
	fbDPJ_4.AddJunction(g_a_pCtrlInst[E_CtrlId.JUN_5b]);
	fbDPJ_4.AddJunction(g_a_pCtrlInst[E_CtrlId.JUN_6a]);
	fbDPJ_4.AddJunction(g_a_pCtrlInst[E_CtrlId.JUN_6b]);
	
	// Decision Point 15; To CONTROLSTATION OR 4X4 LOOP
	fbDPJ_15.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.DPJ_15);     	// init and entry fb_instance in global fb pointer array
	// RFID Reader, element Controller in this Task, Drive in fastest Task class
	fbRFW_15.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.RFW_15); // init and entry fb_instance in global fb pointer array
	fbRFW_15.pRFD_SIf := g_a_pFunRFD[2]^.getSIf();
	pTmpSIf_RFW := fbRFW_15.getCtrlSIf();
	pTmpSIf_RFW^.Cfg.eTyp := E_Typ_RFW.RF382R;
	pTmpSIf_RFW^.Cfg.stNetId := '192.168.2.123.1.1'; //PLC NetId
	pTmpSIf_RFW^.Cfg.uinSlaveAddr := 1024; //Io card Ethercat adress 
	// ADD Childs
	// RFW
	fbDPJ_15.p_fbRFW := g_a_pCtrlInst[E_CtrlId.RFW_15];
	// Junctions are in the Fast task; Pointer from Global Array
	fbDPJ_15.AddJunction(g_a_pCtrlInst[E_CtrlId.JUN_15a]);
	fbDPJ_15.AddJunction(g_a_pCtrlInst[E_CtrlId.JUN_15b]);
	
	// ----------------------------------
	// All Transports
	// ----------------------------------
	// ----------
	// TLC_2
	// ----------
	fbTLC_2.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.TLC_2);     		// TLC_2 - init and entry fb_instance in global fb pointer array
	pTmpSIf_DRV := fbTLC_2.getCtrlSIf();
	pTmpSIf_DRV^.Cfg.eTyp := E_Typ_DRV.TLC;   							// default configuration
	pTmpSIf_DRV^.Cfg.bolPulseExist := TRUE;
	pTmpSIf_DRV^.Cfg.usiCountBlockedSupervis := 2;
	pTmpSIf_DRV^.Cfg.dinPinDistance_um:= 75000; 						//75[mm/puls]
	pTmpSIf_DRV^.Cfg.dinDistPerPulse_um:= 37700;						// 37.7[mm/puls]
	pTmpSIf_DRV^.Par.int_MaxBrokenPins := 10;
	
	// ----------
	// TLP_3
	// ----------
	fbTLP_3.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.TLP_3);     		// TLP_3 - init and entry fb_instance in global fb pointer array
	pTmpSIf_DRV := fbTLP_3.getCtrlSIf();
	pTmpSIf_DRV^.Cfg.eTyp := E_Typ_DRV.TLP;   							// default configuration
	pTmpSIf_DRV^.Cfg.bolPulseExist := TRUE;
	pTmpSIf_DRV^.Cfg.dinDistPerPulse_um:= 28400;						// 28.4[mm/puls]
	
	// ----------
	// TLP_16
	// ----------
	fbTLP_16.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.TLP_16);     	// TLP_10 - init and entry fb_instance in global fb pointer array
	pTmpSIf_DRV := fbTLP_16.getCtrlSIf();
	pTmpSIf_DRV^.Cfg.eTyp := E_Typ_DRV.TLP;   							// default configuration
	pTmpSIf_DRV^.Cfg.bolPulseExist := TRUE;
	pTmpSIf_DRV^.Cfg.dinDistPerPulse_um:= 28400;						// 28.4[mm/puls]
	
	// ----------
	// TLP_4
	// ----------
	fbTLP_4.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.TLP_4);     		// TLP_4 - init and entry fb_instance in global fb pointer array
	pTmpSIf_DRV := fbTLP_4.getCtrlSIf();
	pTmpSIf_DRV^.Cfg.eTyp := E_Typ_DRV.TLPsort;   							// default configuration
	pTmpSIf_DRV^.Cfg.bolPulseExist := TRUE;
	pTmpSIf_DRV^.Cfg.bolSpeedVariable := TRUE;
	pTmpSIf_DRV^.Par.usi_speedLevel := 1;
	pTmpSIf_DRV^.Cfg.dinDistPerPulse_um:= 28400;						// 28.4[mm/puls]

	// ----------
	// TLP_5
	// ----------
	fbTLP_5.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.TLP_5);     		// TLP_5 - init and entry fb_instance in global fb pointer array
	pTmpSIf_DRV := fbTLP_5.getCtrlSIf();
	pTmpSIf_DRV^.Cfg.eTyp := E_Typ_DRV.TLP;   							// default configuration

	// ----------
	// TLK_15
	// ----------
	fbTLK_15.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.TLK_15);     		// TLK_9 - init and entry fb_instance in global fb pointer array
	pTmpSIf_DRV := fbTLK_15.getCtrlSIf();
	pTmpSIf_DRV^.Cfg.eTyp := E_Typ_DRV.TLK;   							// default configuration
	pTmpSIf_DRV^.Cfg.bolPulseExist := TRUE;
	pTmpSIf_DRV^.Cfg.bolSpeedVariable := TRUE;
	pTmpSIf_DRV^.Cfg.dinDistPerPulse_um:= 37700;						// 37.7[mm/puls]
	pTmpSIf_DRV^.Cfg.dinPinDistance_um:= 508000;						// 50.8[cm between pins]
	pTmpSIf_DRV^.Par.usi_speedLevel := 1;
	
	// ----------------------------------
	// All Buffer Elements
	// ----------------------------------
	
	// ----------
	// DSB1_2a
	// ----------
	fbDSB1_2a.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.DSB1_2a);     		// DSB_2 - init and entry fb_instance in global fb pointer array
	pTmpSIf_STB := fbDSB1_2a.getCtrlSIf();
	
	// DSB1_2a - configuration		
	pTmpSIf_STB^.Cfg.bolHasBufferFullSensor := TRUE;   													
	pTmpSIf_STB^.Cfg.bolHasHangerDetection := FALSE;
	pTmpSIf_STB^.Cfg.bolHasDecrementSensor := TRUE;											// Add Decrement Sensor   				
	pTmpSIf_STB^.Cfg.dinMaxCapacity:= 10;													// Based on: +2.0-B1 
	pTmpSIf_STB^.Cfg.uinNumOfHangersPerPulse:= 2;											// Based on: +2.0-Q2								
	pTmpSIf_STB^.Cfg.bolCylPosLostMonitoring:= FALSE;
	pTmpSIf_STB^.Cfg.dinMaxNumOfHangers_PosMonitoring:= pTmpSIf_STB^.Cfg.dinMaxCapacity + 5;
	pTmpSIf_STB^.Cfg.bolReleaseAllNonPulse:= FALSE;
										
	// DSB1_2a - parameter	
	pTmpSIf_STB^.Par.udiPulseLengthValve_ms := 500;
	pTmpSIf_STB^.Par.udiSensorTime_ms := 2000;

	// ----------
	// DSB2_2a
	// ----------
	fbDSB2_2a.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.DSB2_2a);     		// DSB_2 - init and entry fb_instance in global fb pointer array
	pTmpSIf_STB := fbDSB2_2a.getCtrlSIf();
	
	// DSB2_2a - configuration		
	pTmpSIf_STB^.Cfg.bolHasBufferFullSensor := TRUE;   													
	pTmpSIf_STB^.Cfg.bolHasHangerDetection := FALSE;
	pTmpSIf_STB^.Cfg.bolHasDecrementSensor := TRUE;											// Add Decrement Sensor   				
	pTmpSIf_STB^.Cfg.dinMaxCapacity:= 10;													// Based on: +2.0-B1 
	pTmpSIf_STB^.Cfg.uinNumOfHangersPerPulse:= 2;											// Based on: +2.0-Q2								
	pTmpSIf_STB^.Cfg.bolCylPosLostMonitoring:= FALSE;
	pTmpSIf_STB^.Cfg.dinMaxNumOfHangers_PosMonitoring:= pTmpSIf_STB^.Cfg.dinMaxCapacity + 5;
	pTmpSIf_STB^.Cfg.bolReleaseAllNonPulse:= FALSE;
										
	// DSB2_2a - parameter	
	pTmpSIf_STB^.Par.udiPulseLengthValve_ms := 500;
	pTmpSIf_STB^.Par.udiSensorTime_ms := 2000;
	
	// ----------
	// SEP_2a
	// ----------
	fbSEP_2a.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.SEP_2a);     		// SEP_2 - init and entry fb_instance in global fb pointer array
	pTmpSIf_STB := fbSEP_2a.getCtrlSIf();
	
	// SEP_2a - configuration		
	pTmpSIf_STB^.Cfg.bolHasBufferFullSensor := TRUE;   													
	pTmpSIf_STB^.Cfg.bolHasHangerDetection := TRUE;   				
	pTmpSIf_STB^.Cfg.dinMaxCapacity:= 10;													// Based on: +2.0-B5 
	pTmpSIf_STB^.Cfg.uinNumOfHangersPerPulse:= 1;																		
	pTmpSIf_STB^.Cfg.bolCylPosLostMonitoring:= FALSE;
	pTmpSIf_STB^.Cfg.dinMaxNumOfHangers_PosMonitoring:= 6;
	pTmpSIf_STB^.Cfg.bolReleaseAllNonPulse:= FALSE;									
	
	// SEP_2a - parameter	
	pTmpSIf_STB^.Par.udiPulseLengthValve_ms := 500;
	pTmpSIf_STB^.Par.udiSensorTime_ms := 2000;

	// ----------
	// DSB1_2b
	// ----------
	fbDSB1_2b.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.DSB1_2b);     		// DSB_2 - init and entry fb_instance in global fb pointer array
	pTmpSIf_STB := fbDSB1_2b.getCtrlSIf();
	
	// DSB1_2b - configuration		
	pTmpSIf_STB^.Cfg.bolHasBufferFullSensor := TRUE;   													
	pTmpSIf_STB^.Cfg.bolHasHangerDetection := FALSE;
	pTmpSIf_STB^.Cfg.bolHasDecrementSensor := TRUE;											// Add Decrement Sensor   				
	pTmpSIf_STB^.Cfg.dinMaxCapacity:= 10;													// Based on: +2.0-B1 
	pTmpSIf_STB^.Cfg.uinNumOfHangersPerPulse:= 2;											// Based on: +2.0-Q2								
	pTmpSIf_STB^.Cfg.bolCylPosLostMonitoring:= FALSE;
	pTmpSIf_STB^.Cfg.dinMaxNumOfHangers_PosMonitoring:= pTmpSIf_STB^.Cfg.dinMaxCapacity + 5;
	pTmpSIf_STB^.Cfg.bolReleaseAllNonPulse:= FALSE;
										
	// DSB1_2b - parameter	
	pTmpSIf_STB^.Par.udiPulseLengthValve_ms := 500;
	pTmpSIf_STB^.Par.udiSensorTime_ms := 2000;

	// ----------
	// DSB2_2b
	// ----------
	fbDSB2_2b.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.DSB2_2b);     		// DSB_2 - init and entry fb_instance in global fb pointer array
	pTmpSIf_STB := fbDSB2_2b.getCtrlSIf();
	
	// DSB2_2b - configuration		
	pTmpSIf_STB^.Cfg.bolHasBufferFullSensor := TRUE;   													
	pTmpSIf_STB^.Cfg.bolHasHangerDetection := FALSE;
	pTmpSIf_STB^.Cfg.bolHasDecrementSensor := TRUE;											// Add Decrement Sensor   				
	pTmpSIf_STB^.Cfg.dinMaxCapacity:= 10;													// Based on: +2.0-B1 
	pTmpSIf_STB^.Cfg.uinNumOfHangersPerPulse:= 2;											// Based on: +2.0-Q2								
	pTmpSIf_STB^.Cfg.bolCylPosLostMonitoring:= FALSE;
	pTmpSIf_STB^.Cfg.dinMaxNumOfHangers_PosMonitoring:= pTmpSIf_STB^.Cfg.dinMaxCapacity + 5;
	pTmpSIf_STB^.Cfg.bolReleaseAllNonPulse:= FALSE;
										
	// DSB2_2b - parameter	
	pTmpSIf_STB^.Par.udiPulseLengthValve_ms := 500;
	pTmpSIf_STB^.Par.udiSensorTime_ms := 2000;
	
	// ----------
	// SEP_2b
	// ----------
	fbSEP_2b.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.SEP_2b);     		// SEP_2 - init and entry fb_instance in global fb pointer array
	pTmpSIf_STB := fbSEP_2b.getCtrlSIf();
	
	// SEP_2b - configuration		
	pTmpSIf_STB^.Cfg.bolHasBufferFullSensor := TRUE;   													
	pTmpSIf_STB^.Cfg.bolHasHangerDetection := TRUE;   				
	pTmpSIf_STB^.Cfg.dinMaxCapacity:= 10;													// Based on: +2.0-B5 
	pTmpSIf_STB^.Cfg.uinNumOfHangersPerPulse:= 1;																		
	pTmpSIf_STB^.Cfg.bolCylPosLostMonitoring:= FALSE;
	pTmpSIf_STB^.Cfg.dinMaxNumOfHangers_PosMonitoring:= 6;
	pTmpSIf_STB^.Cfg.bolReleaseAllNonPulse:= FALSE;									
	
	// SEP_2b - parameter	
	pTmpSIf_STB^.Par.udiPulseLengthValve_ms := 500;
	pTmpSIf_STB^.Par.udiSensorTime_ms := 2000;

	// ----------
	// DSB1_2c
	// ----------
	fbDSB1_2c.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.DSB1_2c);     		// DSB_2 - init and entry fb_instance in global fb pointer array
	pTmpSIf_STB := fbDSB1_2c.getCtrlSIf();
	
	// DSB1_2c - configuration		
	pTmpSIf_STB^.Cfg.bolHasBufferFullSensor := TRUE;   													
	pTmpSIf_STB^.Cfg.bolHasHangerDetection := FALSE;
	pTmpSIf_STB^.Cfg.bolHasDecrementSensor := TRUE;											// Add Decrement Sensor   				
	pTmpSIf_STB^.Cfg.dinMaxCapacity:= 10;													// Based on: +2.0-B1 
	pTmpSIf_STB^.Cfg.uinNumOfHangersPerPulse:= 2;											// Based on: +2.0-Q2								
	pTmpSIf_STB^.Cfg.bolCylPosLostMonitoring:= FALSE;
	pTmpSIf_STB^.Cfg.dinMaxNumOfHangers_PosMonitoring:= pTmpSIf_STB^.Cfg.dinMaxCapacity + 5;
	pTmpSIf_STB^.Cfg.bolReleaseAllNonPulse:= FALSE;
										
	// DSB1_2c - parameter	
	pTmpSIf_STB^.Par.udiPulseLengthValve_ms := 500;
	pTmpSIf_STB^.Par.udiSensorTime_ms := 2000;

	// ----------
	// DSB2_2c
	// ----------
	fbDSB2_2c.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.DSB2_2c);     		// DSB_2 - init and entry fb_instance in global fb pointer array
	pTmpSIf_STB := fbDSB2_2c.getCtrlSIf();
	
	// DSB2_2c - configuration		
	pTmpSIf_STB^.Cfg.bolHasBufferFullSensor := TRUE;   													
	pTmpSIf_STB^.Cfg.bolHasHangerDetection := FALSE;
	pTmpSIf_STB^.Cfg.bolHasDecrementSensor := TRUE;											// Add Decrement Sensor   				
	pTmpSIf_STB^.Cfg.dinMaxCapacity:= 10;													// Based on: +2.0-B1 
	pTmpSIf_STB^.Cfg.uinNumOfHangersPerPulse:= 2;											// Based on: +2.0-Q2								
	pTmpSIf_STB^.Cfg.bolCylPosLostMonitoring:= FALSE;
	pTmpSIf_STB^.Cfg.dinMaxNumOfHangers_PosMonitoring:= pTmpSIf_STB^.Cfg.dinMaxCapacity + 5;
	pTmpSIf_STB^.Cfg.bolReleaseAllNonPulse:= FALSE;
										
	// DSB2_2c - parameter	
	pTmpSIf_STB^.Par.udiPulseLengthValve_ms := 500;
	pTmpSIf_STB^.Par.udiSensorTime_ms := 2000;
	
	// ----------
	// SEP_2c
	// ----------
	fbSEP_2c.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.SEP_2c);     		// SEP_2 - init and entry fb_instance in global fb pointer array
	pTmpSIf_STB := fbSEP_2c.getCtrlSIf();
	
	// SEP_2c - configuration		
	pTmpSIf_STB^.Cfg.bolHasBufferFullSensor := TRUE;   													
	pTmpSIf_STB^.Cfg.bolHasHangerDetection := TRUE;   				
	pTmpSIf_STB^.Cfg.dinMaxCapacity:= 10;													// Based on: +2.0-B5 
	pTmpSIf_STB^.Cfg.uinNumOfHangersPerPulse:= 1;																		
	pTmpSIf_STB^.Cfg.bolCylPosLostMonitoring:= FALSE;
	pTmpSIf_STB^.Cfg.dinMaxNumOfHangers_PosMonitoring:= 6;
	pTmpSIf_STB^.Cfg.bolReleaseAllNonPulse:= FALSE;									
	
	// SEP_2c - parameter	
	pTmpSIf_STB^.Par.udiPulseLengthValve_ms := 500;
	pTmpSIf_STB^.Par.udiSensorTime_ms := 2000;

	// ----------
	// SBI_5
	// ----------	
	fbSBI_5.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.SBI_5);     		// SBI_5 - init and entry fb_instance in global fb pointer array
	pTmpSIf_STB := fbSBI_5.getCtrlSIf();
		
	// SBI_5 - configuration		
	pTmpSIf_STB^.Cfg.bolHasBufferFullSensor := TRUE;   													
	pTmpSIf_STB^.Cfg.bolHasHangerDetection := TRUE;   				
	pTmpSIf_STB^.Cfg.bolHasDecrementSensor := TRUE;											// Add Decrement Sensor   				
	pTmpSIf_STB^.Cfg.bolDisableBufferDelete := TRUE;										// Disable delete of buffer with sensor
	pTmpSIf_STB^.Cfg.dinMaxCapacity:= 100;													// Number of hangers between +5.0 B4.0 and +5.0 B18.0
	pTmpSIf_STB^.Cfg.uinNumOfHangersPerPulse:= 4;																		
	pTmpSIf_STB^.Cfg.bolCylPosLostMonitoring:= FALSE;
	pTmpSIf_STB^.Cfg.dinMaxNumOfHangers_PosMonitoring:= 6;
	pTmpSIf_STB^.Cfg.bolReleaseAllNonPulse:= FALSE;
										
	// SBI_5 - parameter	
	pTmpSIf_STB^.Par.udiPulseLengthValve_ms := 6000;										// Dependent speed of +5.0 M1
	pTmpSIf_STB^.Par.udiSensorTime_ms := 3000;
	
	// ----------
	// DBO_5
	// ----------	
	fbDBO_5.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.DBO_5);     		// DBO_5 - init and entry fb_instance in global fb pointer array
	pTmpSIf_STB := fbDBO_5.getCtrlSIf();
	
	// DBO_5 - configuration		
	pTmpSIf_STB^.Cfg.bolHasBufferFullSensor := TRUE;   													
	pTmpSIf_STB^.Cfg.bolHasHangerDetection := FALSE;   				
	pTmpSIf_STB^.Cfg.bolHasDecrementSensor := TRUE;											// Add Decrement Sensor   				
	pTmpSIf_STB^.Cfg.dinMaxCapacity:= 20;													// Based on: +5.0-B6 
	pTmpSIf_STB^.Cfg.uinNumOfHangersPerPulse:= 3;											// Based on: +5.0-Q7																
	pTmpSIf_STB^.Cfg.bolCylPosLostMonitoring:= FALSE;
	pTmpSIf_STB^.Cfg.dinMaxNumOfHangers_PosMonitoring:= pTmpSIf_STB^.Cfg.dinMaxCapacity + 5;
	pTmpSIf_STB^.Cfg.bolReleaseAllNonPulse:= FALSE;
									
	// DBO_5 - parameter	
	pTmpSIf_STB^.Par.udiPulseLengthValve_ms := 250;											
	pTmpSIf_STB^.Par.udiSensorTime_ms := 2000;
	
	// ----------
	// SBI_3
	// ----------		
	fbSBI_3.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.SBI_3);     		// SBI_3 - init and entry fb_instance in global fb pointer array
	pTmpSIf_STB := fbSBI_3.getCtrlSIf();
	
	// SBI_3 - configuration		
	pTmpSIf_STB^.Cfg.bolHasBufferFullSensor := TRUE;   													
	pTmpSIf_STB^.Cfg.bolHasHangerDetection := TRUE;
	pTmpSIf_STB^.Cfg.bolHasDecrementSensor:= TRUE;											// Decrement with sensor, not cylinder stroke   				
	pTmpSIf_STB^.Cfg.bolDisableBufferDelete := TRUE;										// Disable delete of buffer with sensor
	pTmpSIf_STB^.Cfg.dinMaxCapacity:= 466;													// Number of hangers between +3.0 Q4.0 and +3.0 B18.0 (7000mm distance / 15mm between hanger to hanger) 
	pTmpSIf_STB^.Cfg.uinNumOfHangersPerPulse:= 1;																		
	pTmpSIf_STB^.Cfg.bolCylPosLostMonitoring:= FALSE;
	pTmpSIf_STB^.Cfg.dinMaxNumOfHangers_PosMonitoring:= 6;
	pTmpSIf_STB^.Cfg.bolReleaseAllNonPulse:= FALSE;
										
	// SBI_3 - parameter	
	pTmpSIf_STB^.Par.udiPulseLengthValve_ms := 2000;										// Dependent speed of +3.0 M4
	pTmpSIf_STB^.Par.udiSensorTime_ms := 3000;
	
	// ----------
	// SBI_16
	// ----------
	fbSBI_16.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.SBI_16);     	// SBI_10 - init and entry fb_instance in global fb pointer array
	pTmpSIf_STB := fbSBI_16.getCtrlSIf();
	// SBI_16 - configuration		
	pTmpSIf_STB^.Cfg.bolHasBufferFullSensor := TRUE;   													
	pTmpSIf_STB^.Cfg.bolHasHangerDetection := TRUE;   				
	pTmpSIf_STB^.Cfg.bolHasDecrementSensor := TRUE;											// Add Decrement Sensor
	pTmpSIf_STB^.Cfg.bolDisableBufferDelete := TRUE;										// Disable delete of buffer with sensor
	pTmpSIf_STB^.Cfg.dinMaxCapacity:= 400;													// Number of hangers between +10.0 Q4.0 and +10.0 B8.0 (6000mm distance / 15mm between hanger to hanger) 
	pTmpSIf_STB^.Cfg.uinNumOfHangersPerPulse:= 1;																		
	pTmpSIf_STB^.Cfg.bolCylPosLostMonitoring:= FALSE;
	pTmpSIf_STB^.Cfg.dinMaxNumOfHangers_PosMonitoring:= 8;
	pTmpSIf_STB^.Cfg.bolReleaseAllNonPulse:= FALSE;							
	// SBI_16 - parameter	
	pTmpSIf_STB^.Par.udiPulseLengthValve_ms := 2000;										// Dependent speed of +10.0 M11
	pTmpSIf_STB^.Par.udiSensorTime_ms := 3000;

	// ----------
	// SEP_12
	// ----------		
	fbSEP_12.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.SEP_12);     		// SEP_8 - init and entry fb_instance in global fb pointer array
	pTmpSIf_STB := fbSEP_12.getCtrlSIf();
	// SEP_12 - configuration
	pTmpSIf_STB^.Cfg.usiSimulationMode:= 1;
	pTmpSIf_STB^.Cfg.usiLineNumber:= 1;						// 1 SEP in transport line to merge hangers into the TLK
	pTmpSIf_STB^.Cfg.bolHasBufferFullSensor := TRUE;   													
	pTmpSIf_STB^.Cfg.bolHasHangerDetection := TRUE;   				
	pTmpSIf_STB^.Cfg.dinMaxCapacity:= 11;													// Based on: +8.0-B6 
	pTmpSIf_STB^.Cfg.uinNumOfHangersPerPulse:= 1;																		
	pTmpSIf_STB^.Cfg.bolCylPosLostMonitoring:= FALSE;
	pTmpSIf_STB^.Cfg.dinMaxNumOfHangers_PosMonitoring:= pTmpSIf_STB^.Cfg.dinMaxCapacity + 5;
	pTmpSIf_STB^.Cfg.bolReleaseAllNonPulse:= FALSE;	
			
	// SEP_12 - parameter	
	pTmpSIf_STB^.Par.udiPulseLengthValve_ms := 200;   // needs 200ms, work in combination with a MER configured with mode "MergeIntoTrp"
	pTmpSIf_STB^.Par.udiSensorTime_ms := 2000;
	pTmpSIf_STB^.Par.dinPositionOfSlide_um:= 3000000;  // 3 m
	pTmpSIf_STB^.Par.uinTimeOnSlide_ms:= 10;
	
	// ----------
	// SEP_13
	// ----------		
	fbSEP_13.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.SEP_13);     		// SEP_8 - init and entry fb_instance in global fb pointer array
	pTmpSIf_STB := fbSEP_13.getCtrlSIf();
	// SEP_13 - configuration	
	pTmpSIf_STB^.Cfg.usiSimulationMode:= 1;
	pTmpSIf_STB^.Cfg.usiLineNumber:= 2;						// 2 SEP in transport line to merge hangers into the TLK
	pTmpSIf_STB^.Cfg.bolHasBufferFullSensor := TRUE;   													
	pTmpSIf_STB^.Cfg.bolHasHangerDetection := TRUE;   				
	pTmpSIf_STB^.Cfg.dinMaxCapacity:= 11;													// Based on: +8.0-B6 
	pTmpSIf_STB^.Cfg.uinNumOfHangersPerPulse:= 1;																		
	pTmpSIf_STB^.Cfg.bolCylPosLostMonitoring:= FALSE;
	pTmpSIf_STB^.Cfg.dinMaxNumOfHangers_PosMonitoring:= pTmpSIf_STB^.Cfg.dinMaxCapacity + 5;
	pTmpSIf_STB^.Cfg.bolReleaseAllNonPulse:= FALSE;			
	// SEP_13 - parameter	
	pTmpSIf_STB^.Par.udiPulseLengthValve_ms := 200;   // needs 200ms, work in combination with a MER configured with mode "MergeIntoTrp"
	pTmpSIf_STB^.Par.udiSensorTime_ms := 2000;
	pTmpSIf_STB^.Par.dinPositionOfSlide_um:= 6000000;  // 6 m
	pTmpSIf_STB^.Par.uinTimeOnSlide_ms:= 10;
	
	// ----------
	// SEP_14
	// ----------		
	fbSEP_14.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.SEP_14);     		// SEP_8 - init and entry fb_instance in global fb pointer array
	pTmpSIf_STB := fbSEP_14.getCtrlSIf();
	// SEP_14 - configuration	
	pTmpSIf_STB^.Cfg.usiSimulationMode:= 1;	
	pTmpSIf_STB^.Cfg.usiLineNumber:= 3;						// 3 SEP in transport line to merge hangers into the TLK
	pTmpSIf_STB^.Cfg.bolHasBufferFullSensor := TRUE;   													
	pTmpSIf_STB^.Cfg.bolHasHangerDetection := TRUE;   				
	pTmpSIf_STB^.Cfg.dinMaxCapacity:= 11;													// Based on: +8.0-B6 
	pTmpSIf_STB^.Cfg.uinNumOfHangersPerPulse:= 1;																		
	pTmpSIf_STB^.Cfg.bolCylPosLostMonitoring:= FALSE;
	pTmpSIf_STB^.Cfg.dinMaxNumOfHangers_PosMonitoring:= pTmpSIf_STB^.Cfg.dinMaxCapacity + 5;
	pTmpSIf_STB^.Cfg.bolReleaseAllNonPulse:= FALSE;				
	// SEP_14 - parameter	
	pTmpSIf_STB^.Par.udiPulseLengthValve_ms := 200;   // needs 200ms, work in combination with a MER configured with mode "MergeIntoTrp"
	pTmpSIf_STB^.Par.udiSensorTime_ms := 2000;
	pTmpSIf_STB^.Par.dinPositionOfSlide_um:= 9000000;  // 9 m
	pTmpSIf_STB^.Par.uinTimeOnSlide_ms:= 10;
	
	// ----------------------------------
	// Elementgroups of Slide- Buffers
	// ----------------------------------
	
	// ----------
	// SLB_2a
	// ----------	
	fbSLB_2a.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.SLB_2a);     		// SLB_2 - init and entry fb_instance in global fb pointer array
	fbSLB_2a.AddBufferZone(g_a_pCtrlInst[E_CtrlId.SEP_2a]);				// Add Element as Type Bufferelement
	fbSLB_2a.AddBufferZone(g_a_pCtrlInst[E_CtrlId.DSB1_2a]);				// Add Element as Type Bufferelement
	fbSLB_2a.AddBufferZone(g_a_pCtrlInst[E_CtrlId.DSB2_2a]);				// Add Element as Type Bufferelement

	// ----------
	// SLB_2b
	// ----------	
	fbSLB_2b.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.SLB_2b);     		// SLB_2 - init and entry fb_instance in global fb pointer array
	fbSLB_2b.AddBufferZone(g_a_pCtrlInst[E_CtrlId.SEP_2b]);				// Add Element as Type Bufferelement
	fbSLB_2b.AddBufferZone(g_a_pCtrlInst[E_CtrlId.DSB1_2b]);				// Add Element as Type Bufferelement
	fbSLB_2b.AddBufferZone(g_a_pCtrlInst[E_CtrlId.DSB2_2b]);				// Add Element as Type Bufferelement

	// ----------
	// SLB_2c
	// ----------	
	fbSLB_2c.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.SLB_2c);     		// SLB_2 - init and entry fb_instance in global fb pointer array
	fbSLB_2c.AddBufferZone(g_a_pCtrlInst[E_CtrlId.SEP_2c]);				// Add Element as Type Bufferelement
	fbSLB_2c.AddBufferZone(g_a_pCtrlInst[E_CtrlId.DSB1_2c]);				// Add Element as Type Bufferelement
	fbSLB_2c.AddBufferZone(g_a_pCtrlInst[E_CtrlId.DSB2_2c]);				// Add Element as Type Bufferelement

	// ----------
	// BUF_5
	// ----------	
	fbBUF_5.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.BUF_5);     		// BUF_5 - init and entry fb_instance in global fb pointer array
	fbBUF_5.AddBufferZone(g_a_pCtrlInst[E_CtrlId.DBO_5]);				// Add Element as Type Bufferelement
	fbBUF_5.AddBufferZone(g_a_pCtrlInst[E_CtrlId.SBI_5]);				// Add Element as Type Bufferelement

	// ----------
	// BUF_3
	// ----------	
	fbBUF_3.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.BUF_3);     		// BUF_3 - init and entry fb_instance in global fb pointer array
	fbBUF_3.AddBufferZone(g_a_pCtrlInst[E_CtrlId.SBI_3]);				// Add Element as Type Bufferelement
	
	// ----------
	// BUF_16
	// ----------	
	fbBUF_16.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.BUF_16);     	// BUF_10 - init and entry fb_instance in global fb pointer array
	fbBUF_16.AddBufferZone(g_a_pCtrlInst[E_CtrlId.SBI_16]);				// Add Element as Type Bufferelement
		
	// ----------------------------------
	// MERGERS
	// ----------------------------------
	
	// ----------
	// MTR_15
	// ----------
	fbMTR_15.iniAllCtrlArrays(ADR(g_a_pCtrlInst),ADR(g_a_pCtrlCIf),E_CtrlId.MTR_15);     // init and entry fb_instance in global fb pointer array
	pTmpSIf_MTR:= fbMTR_15.getCtrlSIf();
	// ADD Childs
	fbMTR_15.AddLine(g_a_pCtrlInst[E_CtrlId.SEP_12]);
	fbMTR_15.AddLine(g_a_pCtrlInst[E_CtrlId.SEP_13]);
	fbMTR_15.AddLine(g_a_pCtrlInst[E_CtrlId.SEP_14]);
	// MTR_15 - parameters fix	
	pTmpSIf_MTR^.Par.dinHangerSensorPosition_um := 770000; 				    // 770 mm  Distance between pin sensor and hanger detected sensor
	pTmpSIf_MTR^.Par.dinPinLenght_um:= 25000; 								// 25 mm								
	pTmpSIf_MTR^.Par.dinSectionLenght_um:= 484000;							// 484 mm
	pTmpSIf_MTR^.Par.dinTrigStartOffset_um:= 1000;							// 1 mm						
	pTmpSIf_MTR^.Par.dinTrigEndOffset_um:= 10000;							// 10 mm	
	
	g_uinStartProzess := g_uinStartProzess + 1; // For StartUp order
	
END_IF
// -----------------------------------------------------------------------------------------------


// -----------------------------------------------------------------------------------------------
// The host system is downloading all parameter at startup. 
// bolPlcStartupDone will be set to true after the Host is done with the initialization
// -----------------------------------------------------------------------------------------------
IF (bolPlcStartupDone AND (NOT bolHostInitDone) AND (NOT bolInitDone) AND (g_uinStartProzess>=(uinTaskNbr-1)+10)) THEN
	g_uinStartProzess := g_uinStartProzess + 1;
	bolHostInitDone := TRUE;
END_IF
// -----------------------------------------------------------------------------------------------


// -----------------------------------------------------------------------------------------------
// Start PLC code initialization
// -----------------------------------------------------------------------------------------------
IF (NOT bolInitDone AND bolPlcStartupDone AND bolHostInitDone AND (g_uinStartProzess>=(uinTaskNbr-1)+20)) THEN
	
	// init
	g_uinStartProzess := g_uinStartProzess + 1;	
	bolInitDone := TRUE;
END_IF
// -----------------------------------------------------------------------------------------------

// -----------------------------------------------------------------------------------------------
// Normal Run mode after all the initialization is done
// -----------------------------------------------------------------------------------------------
IF (bolInitDone AND bolPlcStartupDone AND bolHostInitDone AND (g_uinStartProzess>=(20+c_uinCntTaskClass))) THEN
	
	//****************************************************************************************************
	// cyclic controller calls
	//****************************************************************************************************
	
	// DPJ_4
	fbDPJ_4.In_bolHangerDetector := In_4_0_B7_Hanger_In_Compartement;
	fbDPJ_4();
	// DPJ_5
	fbDPJ_15.In_bolHangerDetector := In_15_0_B1_Hanger_In_TLK_ReadingStation;
	fbDPJ_15();
	// RFW_4	
	fbRFW_4();
	// RFW_9
	fbRFW_15();
	
	// TLC_2
	fbTLC_2.In_bolOverload := NOT(In_2_0_Motor_Ok_M1);
	fbTLC_2.In_bolPulse := In_2_0_B45_Clock_Pulse;
	fbTLC_2.In_a_bolBlockedSupvervis[1] := In_2_0_B18_Blocking_Supervision;
	fbTLC_2.In_a_bolBlockedSupvervis[2] := In_2_0_B46_Blocking_Supervision;
	fbTLC_2();
	Out_2_0_Motor_On_M1 := fbTLC_2.Out_bolSpeed_1;

	// TLP_3
	fbTLP_3.In_bolOverload := NOT(In_3_0_Motor_Ok_M1);
	fbTLP_3.In_bolPulse := In_3_0_B7_Clock_Pulse;
	fbTLP_3();
	Out_3_0_Motor_On_M1 := fbTLP_3.Out_bolSpeed_1;

	// TLP_16
	fbTLP_16.In_bolOverload := NOT(In_16_0_Motor_Ok_M1);
	fbTLP_16.In_bolPulse := In_16_0_B7_Clock_Pulse;
	fbTLP_16();
	Out_16_0_Motor_On_M1 := fbTLP_16.Out_bolSpeed_1;

	// TLP_4
	fbTLP_4.In_bolOverload := In_4_0_Motor_Ok_M1;
	fbTLP_4.In_bolPulse := In_4_0_B33_Clock_Pulse;
	fbTLP_4();
	Out_4_0_Motor_Speed_K1_M1 := fbTLP_4.Out_bolSpeed_1;
	Out_4_0_Motor_Speed_K2_M1 := fbTLP_4.Out_bolSpeed_2;

	// TLP_5
	fbTLP_5.In_bolOverload := NOT(In_5_0_Motor_Ok_M1);
	fbTLP_5();
	Out_5_0_Motor_On_M1 := fbTLP_5.Out_bolSpeed_1;

	// TLK_9
	fbTLK_15.In_bolOverload := In_15_0_Motor_Ok_M1;
	fbTLK_15.In_bolPulse := In_15_0_B13_Clock_Pulse;
	fbTLK_15();
	Out_15_0_Motor_Speed_K1_M1 := fbTLK_15.Out_bolSpeed_1;
	Out_15_0_Motor_Speed_K2_M1 := fbTLK_15.Out_bolSpeed_2;
	
	// SLB_2a
	fbSLB_2a();	
	// DSB1_2a
	fbDSB1_2a.In_bolBufferFull := In_2_0_B5_DoubleStopper_Full;
	fbDSB1_2a.In_bolDecrementCounter:= In_2_0_B3_DoubleStopper_Full;
	fbDSB1_2a();
	Out_2_0_Y4_DoubleStopper := fbDSB1_2a.Out_bolRetract;	
	// DSB2_2a
	fbDSB2_2a.In_bolBufferFull := In_2_0_B7_DoubleStopper_Full;
	fbDSB2_2a.In_bolDecrementCounter:= In_2_0_B5_DoubleStopper_Full;
	fbDSB2_2a();
	Out_2_0_Y6_DoubleStopper := fbDSB2_2a.Out_bolRetract;	
	// SEP_2a
	fbSEP_2a.In_bolHangerDetected := In_2_0_B2_Hanger_In_Separator;
	fbSEP_2a.In_bolBufferFull := In_2_0_B3_DoubleStopper_Full;
	fbSEP_2a();
	Out_2_0_Y1_Separator := fbSEP_2a.Out_bolRetract;

	// SLB_2b
	fbSLB_2b();	
	// DSB1_2b
	fbDSB1_2b.In_bolBufferFull := In_2_0_B15_DoubleStopper_Full;
	fbDSB1_2b.In_bolDecrementCounter:= In_2_0_B13_DoubleStopper_Full;
	fbDSB1_2b();
	Out_2_0_Y14_DoubleStopper := fbDSB1_2b.Out_bolRetract;	
	// DSB2_2b
	fbDSB2_2b.In_bolBufferFull := In_2_0_B17_DoubleStopper_Full;
	fbDSB2_2b.In_bolDecrementCounter:= In_2_0_B15_DoubleStopper_Full;
	fbDSB2_2b();
	Out_2_0_Y16_DoubleStopper := fbDSB2_2b.Out_bolRetract;	
	// SEP_2b
	fbSEP_2b.In_bolHangerDetected := In_2_0_B12_Hanger_In_Separator;
	fbSEP_2b.In_bolBufferFull := In_2_0_B13_DoubleStopper_Full;
	fbSEP_2b();
	Out_2_0_Y11_DoubleStopper := fbSEP_2b.Out_bolRetract;
			
	// SLB_2c
	fbSLB_2c();	
	// DSB1_2c
	fbDSB1_2c.In_bolBufferFull := In_2_0_B25_DoubleStopper_Full;
	fbDSB1_2c.In_bolDecrementCounter:= In_2_0_B23_DoubleStopper_Full;
	fbDSB1_2c();
	Out_2_0_Y24_DoubleStopper := fbDSB1_2c.Out_bolRetract;	
	// DSB2_2c
	fbDSB2_2c.In_bolBufferFull := In_2_0_B27_DoubleStopper_Full;
	fbDSB2_2c.In_bolDecrementCounter:= In_2_0_B25_DoubleStopper_Full;
	fbDSB2_2c();
	Out_2_0_Y26_DoubleStopper := fbDSB2_2c.Out_bolRetract;	
	// SEP_2c
	fbSEP_2c.In_bolHangerDetected := In_2_0_B22_Hanger_In_Separator;
	fbSEP_2c.In_bolBufferFull := In_2_0_B23_DoubleStopper_Full;
	fbSEP_2c();
	Out_2_0_Y21_DoubleStopper := fbSEP_2c.Out_bolRetract;
	
	// BUF_5
	fbBUF_5();	
	// SBI_5
	fbSBI_5.In_bolBufferFull := In_4_0_B18a_TLP_Full;
	fbSBI_5.In_bolHangerDetected := In_5_0_B4_Hanger_At_PreStopper;
	fbSBI_5.In_bolDecrementCounter := In_5_0_B6_DoubleStopper_Full;
	fbSBI_5();
	Out_5_0_Y5_PreStopper := fbSBI_5.Out_bolRetract;
    // DBO_5
	fbDBO_5.In_bolBufferFull := In_5_0_B6_DoubleStopper_Full;
	fbDBO_5.In_bolDecrementCounter := In_2_0_B8_Hanger_In_TLC;
	fbDBO_5();
	Out_5_0_Y7_DoubleStopper := fbDBO_5.Out_bolRetract;
		
	// BUF_3
	fbBUF_3();
	// SBI_3
	fbSBI_3.In_bolHangerDetected := In_3_0_B3_Hanger_At_PreStopper;
	fbSBI_3.In_bolBufferFull := In_2_0_B18a_TLP_Full;
	fbSBI_3.In_bolDecrementCounter := In_3_0_B5_Hanger_At_PreStopper;		// Decrement with sensor, not cylinder stroke
	fbSBI_3();
	Out_3_0_Y4_PreStopper := fbSBI_3.Out_bolRetract;

	// BUF_16
	fbBUF_16();
	// SBI_10
	fbSBI_16.In_bolHangerDetected := In_16_0_B3_Hanger_At_PreStopper;
	fbSBI_16.In_bolBufferFull := In_16_0_B8_TLP_50Percent_Full;
	fbSBI_16.In_bolDecrementCounter := In_16_0_B5_Hanger_At_PreStopper;
	fbSBI_16();
	Out_16_0_Y4_PreStopper := fbSBI_16.Out_bolRetract;
	
	fbSEP_12.In_bolHangerDetected:= In_12_0_B8_Hanger_At_Separator;
	fbSEP_12.In_bolBufferFull := In_12_0_B6_Separator_Full;
	fbSEP_12();
	Out_12_0_Y7_Separator := fbSEP_12.Out_bolRetract;
	
	fbSEP_13.In_bolHangerDetected:= In_13_0_B8_Hanger_At_Separator;
	fbSEP_13.In_bolBufferFull := In_13_0_B6_Separator_Full;
	fbSEP_13();
	Out_13_0_Y7_Separator := fbSEP_13.Out_bolRetract;
	
	fbSEP_14.In_bolHangerDetected:= In_14_0_B8_Hanger_At_Separator;
	fbSEP_14.In_bolBufferFull := In_14_0_B6_Separator_Full;
	fbSEP_14();
	Out_14_0_Y7_Separator := fbSEP_14.Out_bolRetract;
	
	fbMTR_15.In_bolHangerDetected := In_15_0_B2_Hanger_In_TLK;
	fbMTR_15.In_bolPinDetected := In_15_0_B15_Loading_Pulse;	
	fbMTR_15();
	
END_IF
// -----------------------------------------------------------------------------------------------]]></ST>
    </Implementation>
    <ObjectProperties>﻿<XmlArchive>
  <Data>
    <o xml:space="preserve" t="POUImageProperty">
      <n n="ImageData" />
      <v n="TransparencyColor">"White"</v>
      <v n="MakeTransparent">false</v>
    </o>
  </Data>
  <TypeList>
    <Type n="Boolean">System.Boolean</Type>
    <Type n="POUImageProperty">{bb741845-1ec5-4be9-bb0d-2cf7058af574}</Type>
    <Type n="String">System.String</Type>
  </TypeList>
</XmlArchive></ObjectProperties>
  </POU>
</TcPlcObject>